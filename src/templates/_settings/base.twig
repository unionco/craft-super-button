{% import "_includes/forms" as forms %}

{% set fieldSettings = type.fieldSettings %}
{% set isAvailable = fieldSettings.types[type.type].enabled ?? false %}

{{ forms.lightSwitchField({
    id: type.type|id,
    name: 'enabled',
    label: type.defaultLabel(),
    toggle: type.hasSettings ? '#' ~ type.type|id ~ '-settings' : null,
    on: isAvailable,
}) }}

<div id="{{ type.type|id }}-settings" class="{{ not isAvailable ? 'hidden' }}">
    {{ forms.textField({
        label: "Dropdown Label"|t('super-button'),
        instructions: "Enter the label you want to appear in the link dropdown."|t('super-button'),
        id: type.type|id~'-customLabel',
        name: 'customLabel',
        value: type.customLabel ?? '',
        placeholder: type.defaultLabel,
        errors: type.getErrors('customLabel')
    }) }}
{# closing tag exist on field #}
